<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">




	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />


	<!-- 数据源，使用dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.mysql.jdbc.driver}" />
		<property name="url" value="${db.mysql.jdbc.url}" />
		<property name="username" value="${db.mysql.jdbc.username}" />
		<property name="password" value="${db.mysql.jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>


	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!-- 		mybatisプロパティファイル -->
<!-- 		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" /> -->

	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="jp.co.csj.backsys.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

 <!--事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

 <!-- 使用注解事务，需要添加Transactional注解属性 -->
<!--     <tx:annotation-driven transaction-manager="transactionManager"/> -->
 <!--启用最新的注解器、映射器-->
<!--     <mvc:annotation-driven/> -->




<!-- 配置事务的通知：(事务的增强) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--
				propagation :事务的传播行为
				isolation   :事务的隔离级别
				read-only   :只读
				rollback-for:发生哪些异常回滚
				no-rollback-for:发生哪些异常不回滚
				timeout     :过期信息
			 -->
			<tx:method name="transfer" rollback-for="ArithmeticException"/>
		</tx:attributes>
	</tx:advice>

	<!-- 配置切面  -->
	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut id="pointcut"
			expression="execution(* jp.co.csj.backsys.batch.service.*.*(..))" />
		<!-- 配置切面 -->
		<aop:advisor pointcut-ref="pointcut" advice-ref="txAdvice" />
	</aop:config>


 <context:annotation-config />
    <context:component-scan base-package="jp.co" />
</beans>